/**
* This file was automatically generated by @oraichain/ts-codegen@0.35.8.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @oraichain/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import {} from "./types.js";
import {InstantiateMsg, ExecuteMsg, Binary, QueryMsg} from "./Cw1IbcHooks.types.js";
export interface Cw1IbcHooksReadOnlyInterface {
  contractAddress: string;
}
export class Cw1IbcHooksQueryClient implements Cw1IbcHooksReadOnlyInterface {
  client: CosmWasmClient;
  contractAddress: string;

  constructor(client: CosmWasmClient, contractAddress: string) {
    this.client = client;
    this.contractAddress = contractAddress;
  }

}
export interface Cw1IbcHooksInterface extends Cw1IbcHooksReadOnlyInterface {
  contractAddress: string;
  sender: string;
  execute: ({
    msg
  }: {
    msg: Binary;
  }, _fee?: number | StdFee | "auto", _memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
export class Cw1IbcHooksClient extends Cw1IbcHooksQueryClient implements Cw1IbcHooksInterface {
  client: SigningCosmWasmClient;
  sender: string;
  contractAddress: string;

  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {
    super(client, contractAddress);
    this.client = client;
    this.sender = sender;
    this.contractAddress = contractAddress;
    this.execute = this.execute.bind(this);
  }

  execute = async ({
    msg
  }: {
    msg: Binary;
  }, _fee: number | StdFee | "auto" = "auto", _memo?: string, _funds?: Coin[]): Promise<ExecuteResult> => {
    return await this.client.execute(this.sender, this.contractAddress, {
      execute: {
        msg
      }
    }, _fee, _memo, _funds);
  };
}